version: '3.9'
networks:
  overlaynet:
    external: true
    name: elastic-package-stack-overlay
services:
  elasticsearch:
    image: "${ELASTICSEARCH_IMAGE_REF}"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "ELASTIC_PASSWORD=changeme"
    volumes:
      - "./elasticsearch.config.${STACK_VERSION_VARIANT}.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "../../../stack/ingest-geoip/${STACK_VERSION_VARIANT}/:/usr/share/elasticsearch/config/ingest-geoip"
    ports:
      - "9200:9200"
    networks:
      - overlaynet

  kibana:
    image: "${KIBANA_IMAGE_REF}"
    depends_on:
      - elasticsearch
      - package-registry
    volumes:
      - "./kibana.config.${STACK_VERSION_VARIANT}.yml:/usr/share/kibana/config/kibana.yml"
      - "../../../stack/healthcheck.sh:/usr/share/kibana/healthcheck.sh"
    ports:
      - "5601:5601"
    networks:
      - overlaynet

  package-registry:
    image: docker.elastic.co/package-registry/distribution:snapshot
    volumes:
      - "../../../profiles/${PROFILE_NAME}/stack/package-registry.config.yml:/package-registry/config.yml"
      - "../../../stack/development:/packages/development"
    ports:
      - "8080:8080"
    networks:
      - overlaynet

  fleet-server:
    image: "${ELASTIC_AGENT_IMAGE_REF}"
    depends_on:
      - elasticsearch
      - kibana
    hostname: docker-fleet-server
    environment:
    - "FLEET_SERVER_ENABLE=1"
    - "FLEET_SERVER_INSECURE_HTTP=1"
    - "KIBANA_FLEET_SETUP=1"
    - "KIBANA_FLEET_HOST=http://kibana:5601"
    - "FLEET_SERVER_HOST=0.0.0.0"
    - "STATE_PATH=/usr/share/elastic-agent"
    ports:
      - "8220:8220"
    networks:
      - overlaynet

  debug-host:
    image: ubuntu
    command: ["tail", "-f", "/dev/null"]
    deploy:
      replicas: 2
    networks:
      - overlaynet

  elastic-agent:
    image: "${ELASTIC_AGENT_IMAGE_REF}"
    deploy:
      replicas: 2
    depends_on:
      - fleet-server
    healthcheck:
      test: "elastic-agent status"
      retries: 90
      interval: 1s
    hostname: docker-fleet-agent
    environment:
    - "FLEET_ENROLL=1"
    - "FLEET_INSECURE=1"
    - "FLEET_URL=http://fleet-server:8220"
    - "STATE_PATH=/usr/share/elastic-agent"
    volumes:
    - type: bind
      source: /tmp
      target: /tmp
    networks:
      - overlaynet
